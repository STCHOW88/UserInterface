/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package myGUI;

import Geometry.*;
import java.awt.BorderLayout;
import javax.swing.*;
import java.io.BufferedReader;
import java.awt.Canvas;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import static java.lang.Double.parseDouble;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

public class GeomGUI extends javax.swing.JFrame {

    protected ArrayList geomsList = new ArrayList();
    protected File file = null;
    protected Canvas canvas = null;
    private Object Geometry;


    public GeomGUI() {
        initComponents();
        jPanel2.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        geometryList = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        nameField = new javax.swing.JTextField();
        radiusField = new javax.swing.JTextField();
        lengthField = new javax.swing.JTextField();
        widthField = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();
        radiusLabel = new javax.swing.JLabel();
        lengthLabel = new javax.swing.JLabel();
        widthLabel = new javax.swing.JLabel();
        createButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        heightLabel = new javax.swing.JLabel();
        heightField = new javax.swing.JTextField();
        typeField = new java.awt.TextField();
        xLabel = new javax.swing.JLabel();
        xField = new javax.swing.JTextField();
        yLabel = new javax.swing.JLabel();
        yField = new javax.swing.JTextField();
        zLabel = new javax.swing.JLabel();
        zField = new javax.swing.JTextField();
        ErrorField = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        File = new javax.swing.JMenu();
        Save = new javax.swing.JMenuItem();
        SaveAs = new javax.swing.JMenuItem();
        Open = new javax.swing.JMenuItem();
        Clear = new javax.swing.JMenuItem();
        Exit = new javax.swing.JMenuItem();
        menu2D = new javax.swing.JMenu();
        jMenuItemCircle = new javax.swing.JMenuItem();
        jMenuItemRectangle = new javax.swing.JMenuItem();
        jMenuItemSquare = new javax.swing.JMenuItem();
        menu3D = new javax.swing.JMenu();
        jMenuItemBox = new javax.swing.JMenuItem();
        jMenuItemCylinder = new javax.swing.JMenuItem();
        jMenuItemCone = new javax.swing.JMenuItem();
        jMenuItemSphere = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 153));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), new java.awt.Color(204, 204, 204)));

        geometryList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                geometryListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(geometryList);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        nameLabel.setText("Name");

        radiusLabel.setText("Radius");

        lengthLabel.setText("Length");

        widthLabel.setText("Width");

        createButton.setText("Create");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Type");

        heightLabel.setText("Height");

        typeField.setEditable(false);

        xLabel.setText("X");

        yLabel.setText("Y");

        zLabel.setText("Z");

        ErrorField.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(createButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(nameLabel)
                                .addComponent(radiusLabel)
                                .addComponent(lengthLabel)
                                .addComponent(widthLabel)
                                .addComponent(jLabel5)
                                .addComponent(heightLabel))
                            .addGap(58, 58, 58)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(radiusField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lengthField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(widthField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(heightField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(typeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(xLabel, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(yLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(zLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(88, 88, 88)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(zField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(yField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(xField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(ErrorField, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {heightField, lengthField, nameField, radiusField, typeField, widthField, xField, yField, zField});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(typeField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radiusField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radiusLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lengthLabel)
                    .addComponent(lengthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(widthLabel)
                    .addComponent(widthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(heightLabel)
                    .addComponent(heightField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(xLabel)
                        .addGap(11, 11, 11))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(xField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(yField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(yLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(zField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(zLabel))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ErrorField)
                .addGap(18, 18, 18)
                .addComponent(createButton)
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {heightField, lengthField, nameField, radiusField, typeField, widthField});

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Type", "Name", "Area", "Volume"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 608, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 39, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        File.setText("File");

        Save.setText("Save");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });
        File.add(Save);

        SaveAs.setText("Save As");
        SaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveAsActionPerformed(evt);
            }
        });
        File.add(SaveAs);

        Open.setText("Open");
        Open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenActionPerformed(evt);
            }
        });
        File.add(Open);

        Clear.setText("Clear All");
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });
        File.add(Clear);

        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        File.add(Exit);

        jMenuBar1.add(File);

        menu2D.setText("2D");

        jMenuItemCircle.setText("Circle");
        jMenuItemCircle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCircleActionPerformed(evt);
            }
        });
        menu2D.add(jMenuItemCircle);

        jMenuItemRectangle.setText("Rectangle");
        jMenuItemRectangle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemRectangleActionPerformed(evt);
            }
        });
        menu2D.add(jMenuItemRectangle);

        jMenuItemSquare.setText("Square");
        jMenuItemSquare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSquareActionPerformed(evt);
            }
        });
        menu2D.add(jMenuItemSquare);

        jMenuBar1.add(menu2D);

        menu3D.setText("3D");

        jMenuItemBox.setText("Box");
        jMenuItemBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemBoxActionPerformed(evt);
            }
        });
        menu3D.add(jMenuItemBox);

        jMenuItemCylinder.setText("Cylinder");
        jMenuItemCylinder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCylinderActionPerformed(evt);
            }
        });
        menu3D.add(jMenuItemCylinder);

        jMenuItemCone.setText("Cone");
        jMenuItemCone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemConeActionPerformed(evt);
            }
        });
        menu3D.add(jMenuItemCone);

        jMenuItemSphere.setText("Sphere");
        jMenuItemSphere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSphereActionPerformed(evt);
            }
        });
        menu3D.add(jMenuItemSphere);

        jMenuBar1.add(menu3D);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputInitializer(java.awt.event.ActionEvent evt) {
        JMenuItem menuItem = (JMenuItem) evt.getSource();
        String geomType = menuItem.getText();
        ErrorField.setText("");
        jPanel2.setVisible(true);
        switch (geomType) {
            case "Circle":
                typeField.setText(geomType);
                radiusLabel.setVisible(true);
                radiusField.setVisible(true);
                lengthLabel.setVisible(false);
                lengthField.setVisible(false);
                widthLabel.setVisible(false);
                widthField.setVisible(false);
                heightLabel.setVisible(false);
                heightField.setVisible(false);
                break;
            case "Square":
                typeField.setText(geomType);
                radiusLabel.setVisible(false);
                radiusField.setVisible(false);
                lengthLabel.setVisible(true);
                lengthField.setVisible(true);
                widthLabel.setVisible(false);
                widthField.setVisible(false);
                heightLabel.setVisible(false);
                heightField.setVisible(false);
                break;
            case "Rectangle":
                typeField.setText(geomType);
                radiusLabel.setVisible(false);
                radiusField.setVisible(false);
                lengthLabel.setVisible(true);
                lengthField.setVisible(true);
                widthLabel.setVisible(true);
                widthField.setVisible(true);
                heightLabel.setVisible(false);
                heightField.setVisible(false);
                break;
            case "Box":
                typeField.setText(geomType);
                radiusLabel.setVisible(false);
                radiusField.setVisible(false);
                lengthLabel.setVisible(true);
                lengthField.setVisible(true);
                widthLabel.setVisible(true);
                widthField.setVisible(true);
                heightLabel.setVisible(true);
                heightField.setVisible(true);
                break;
            case "Cylinder":
                typeField.setText(geomType);
                radiusLabel.setVisible(true);
                radiusField.setVisible(true);
                lengthLabel.setVisible(false);
                lengthField.setVisible(false);
                widthLabel.setVisible(false);
                widthField.setVisible(false);
                heightLabel.setVisible(true);
                heightField.setVisible(true);
                break;
            case "Cone":
                typeField.setText(geomType);
                radiusLabel.setVisible(true);
                radiusField.setVisible(true);
                lengthLabel.setVisible(false);
                lengthField.setVisible(false);
                widthLabel.setVisible(false);
                widthField.setVisible(false);
                heightLabel.setVisible(true);
                heightField.setVisible(true);
                break;
            case "Sphere":
                typeField.setText(geomType);
                radiusLabel.setVisible(true);
                radiusField.setVisible(true);
                lengthLabel.setVisible(false);
                lengthField.setVisible(false);
                widthLabel.setVisible(false);
                widthField.setVisible(false);
                heightLabel.setVisible(false);
                heightField.setVisible(false);
                break;
        }
    }

//    private void addCanvas(canvas1){
//        canvas.setSize(jPanel3.getSize());
//        jPanel3.add(canvas);
//    }

    private void OpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new File("."));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
        chooser.setFileFilter(filter);
        int result = chooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            file = chooser.getSelectedFile();
            int ln = 0;//line number
            try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
                String line;
                while ((line = reader.readLine()) != null) {
                    String name = line.trim();//read geometry name
                    Geom cl = (Geom) Class.forName("Geom" + name).newInstance();
                    cl.read(reader);
                    geomsList.add(cl);
                    ln += 2;
                }
                updateList();
                updateTable();
            } catch (FileNotFoundException e) {
                System.out.println("Cannot find the file：" + e.getMessage());
            } catch (IOException ex) {
                System.out.println("Error message" + ex.getMessage());
                ex.printStackTrace();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(GeomGUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                Logger.getLogger(GeomGUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                Logger.getLogger(GeomGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_OpenActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new File("."));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
        chooser.setFileFilter(filter);
        if (file == null) {
            int result = chooser.showSaveDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) {
                file = chooser.getSelectedFile();
            }
        }
        try (PrintWriter pw = new PrintWriter(new FileWriter(file.getAbsoluteFile()))) {
            for (Object geom : geomsList) {
                Geom geometry = (Geom) geom;
                String content = geometry.getType() + "\r\n";
                content = content + geometry.getParameters() + "\r\n";
                pw.write(content);
            }
        } catch (FileNotFoundException e) {
            System.out.println("Cannot find the file：" + e.getMessage());
        } catch (IOException e) {
            System.out.println("Error message" + e.getMessage());
            e.printStackTrace();
        }

    }//GEN-LAST:event_SaveActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ExitActionPerformed

    private void SaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveAsActionPerformed
        File old = file;
        file = null;
        SaveActionPerformed(evt);
        if (file == null) {
            file = old;
        }    }//GEN-LAST:event_SaveAsActionPerformed

    private void jMenuItemCircleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCircleActionPerformed
        inputInitializer(evt);
    }//GEN-LAST:event_jMenuItemCircleActionPerformed

    private void jMenuItemRectangleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemRectangleActionPerformed
        inputInitializer(evt);
    }//GEN-LAST:event_jMenuItemRectangleActionPerformed

    private void jMenuItemSquareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSquareActionPerformed
        inputInitializer(evt);
    }//GEN-LAST:event_jMenuItemSquareActionPerformed

    private void jMenuItemBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemBoxActionPerformed
        inputInitializer(evt);
    }//GEN-LAST:event_jMenuItemBoxActionPerformed

    private void jMenuItemCylinderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCylinderActionPerformed
        inputInitializer(evt);
    }//GEN-LAST:event_jMenuItemCylinderActionPerformed

    private void jMenuItemConeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemConeActionPerformed
        inputInitializer(evt);
    }//GEN-LAST:event_jMenuItemConeActionPerformed

    private void jMenuItemSphereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSphereActionPerformed
        inputInitializer(evt);
    }//GEN-LAST:event_jMenuItemSphereActionPerformed

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
        String type = typeField.getText();
        double radius = parseDoubleOrNull(radiusField.getText());
        double length = parseDoubleOrNull(lengthField.getText());
        double width = parseDoubleOrNull(widthField.getText());
        double height = parseDoubleOrNull(heightField.getText());
        double[] center = {parseDoubleOrNull(xField.getText()), parseDoubleOrNull(yField.getText()), parseDoubleOrNull(zField.getText())};
        String name = nameField.getText();
        boolean flag = checkName(name);

        switch (type) {
            case "Circle":
                Geom circle = new Geometry.Circle(name, radius, center);
                geomsList.add(circle);
                break;
            case "Square":
                Geom square = new Geometry.Square(name, length, center);
                geomsList.add(square);
                break;
            case "Rectangle":
                Geom rectangle = new Rectangle(name, length, width, center);
                geomsList.add(rectangle);
                break;
            case "Box":
                Geom box = new Geometry.Box(name, length, width, height, center);
                geomsList.add(box);
                break;
            case "Cylinder":
                Geom cylinder = new Cylinder(name, radius, height, center);
                geomsList.add(cylinder);
                break;
            case "Sphere":
                Geom sphere = new Sphere(name, radius, center);
                geomsList.add(sphere);
                break;
            case "Cone":
                Geom cone = new Sphere(name, length, center);
                geomsList.add(cone);
                break;

        }

        if (flag == true) {
            geomsList.remove(geomsList.size() - 1);
        }
        int size = geomsList.size();
        if (!geomsList.isEmpty() && (Geom) geomsList.get(size - 1) instanceof Geom2D) {
            plot2D((Geom) geomsList.get(size - 1));
        }
        if (!geomsList.isEmpty() && (Geom) geomsList.get(size - 1) instanceof Geom3D) {
            plot3D((Geom) geomsList.get(size - 1));
        }

        nameField.setText("");
        radiusField.setText("");
        lengthField.setText("");
        widthField.setText("");
        heightField.setText("");
        xField.setText("");
        yField.setText("");
        zField.setText("");

        updateList();
        updateTable();
    }//GEN-LAST:event_createButtonActionPerformed

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
        // TODO add your handling code here:
        DefaultListModel listModel = (DefaultListModel) geometryList.getModel();
        listModel.removeAllElements();
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        tableModel.setRowCount(0);
        geomsList.clear();
        canvas.repaint();
    }//GEN-LAST:event_ClearActionPerformed

    private void geometryListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_geometryListMouseClicked
        // TODO add your handling code here:
        int selectedIndex = this.geometryList.getSelectedIndex();
        clickedShapeOnCanvas(selectedIndex);
    }//GEN-LAST:event_geometryListMouseClicked

    public boolean checkName(String name) {
        boolean flag = false;
        if (name.equals("")) {
            ErrorField.setText("Name Required. Try Again.");
            flag = true;
        }
        for (int i = 0; i < geomsList.size(); i++) {
            if (name.equals(((Geom) geomsList.get(i)).getName())) {
                ErrorField.setText("Duplicate Name. Try Again.");
                flag = true;
            }
        }
        if (flag == false) {
            ErrorField.setText("");
        }
        return flag;
    }

    public void clickedShapeOnCanvas(int i) {
        jPanel3.removeAll();
        canvas = new MyCanvas(geomsList, i);
        canvas.setSize(jPanel3.getSize());
        jPanel3.add(canvas);
    }
    
    public void plot3D(Geom shape) {
        jPanel3.removeAll();
        HelloInJFrame app = new HelloInJFrame(shape);
        app.cnvs.setSize(jPanel3.getSize());
        jPanel3.add(app.cnvs);
    }

    public void plot2D(Geom shape) {
        jPanel3.removeAll();
        canvas = new MyCanvas(geomsList);
        canvas.setSize(jPanel3.getSize());
        jPanel3.setVisible(true);
    }

    public static double parseDoubleOrNull(String str) {
        double result = 0;
        try {
            return parseDouble(str);
        } catch (NullPointerException npe) {
        } catch (NumberFormatException nfe) {
        }
        return result;
    }

    private void updateList() {
        DefaultListModel listModel = new DefaultListModel();
        String name;
        for (int i = 0; i < geomsList.size(); i++) {
            name = ((Geom) (geomsList.get(i))).getName();
            if (name != null) {
                listModel.addElement(((Geom) (geomsList.get(i))).getName());
            } else {
                listModel.addElement(((Geom) (geomsList.get(i))).getType());
            }
        }
        geometryList.setModel(listModel);
    }

    private void updateTable() {
        Object[][] data = new String[geomsList.size()][4];
        for (int i = 0; i < geomsList.size(); i++) {
            data[i][0] = ((Geom) geomsList.get(i)).getType();
            data[i][1] = ((Geom) geomsList.get(i)).getName();
            data[i][2] = String.valueOf(((Geom) geomsList.get(i)).computeArea());
            data[i][3] = String.valueOf(((Geom) geomsList.get(i)).computeVolume());
        }
        Object[] colNames = {"Type", "Name", "Area", "Volume"};
        DefaultTableModel model = new DefaultTableModel(data, colNames);
        jTable1.setModel(model);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GeomGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GeomGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GeomGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GeomGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GeomGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Clear;
    private javax.swing.JLabel ErrorField;
    private javax.swing.JMenuItem Exit;
    private javax.swing.JMenu File;
    private javax.swing.JMenuItem Open;
    private javax.swing.JMenuItem Save;
    private javax.swing.JMenuItem SaveAs;
    private javax.swing.JButton createButton;
    private javax.swing.JList<String> geometryList;
    private javax.swing.JTextField heightField;
    private javax.swing.JLabel heightLabel;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemBox;
    private javax.swing.JMenuItem jMenuItemCircle;
    private javax.swing.JMenuItem jMenuItemCone;
    private javax.swing.JMenuItem jMenuItemCylinder;
    private javax.swing.JMenuItem jMenuItemRectangle;
    private javax.swing.JMenuItem jMenuItemSphere;
    private javax.swing.JMenuItem jMenuItemSquare;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField lengthField;
    private javax.swing.JLabel lengthLabel;
    private javax.swing.JMenu menu2D;
    private javax.swing.JMenu menu3D;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField radiusField;
    private javax.swing.JLabel radiusLabel;
    private java.awt.TextField typeField;
    private javax.swing.JTextField widthField;
    private javax.swing.JLabel widthLabel;
    private javax.swing.JTextField xField;
    private javax.swing.JLabel xLabel;
    private javax.swing.JTextField yField;
    private javax.swing.JLabel yLabel;
    private javax.swing.JTextField zField;
    private javax.swing.JLabel zLabel;
    // End of variables declaration//GEN-END:variables
}
